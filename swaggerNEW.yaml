swagger: '2.0'
info:
  title: Showfani Project API
  description: توثيق شامل لواجهة برمجة التطبيقات (API) لتطبيق Showfani.
  termsOfService: https://www.google.com/policies/terms/
  contact:
    email: your_email@example.com
  license:
    name: BSD License
  version: v1
host: 127.0.0.1:8000
schemes:
- http
basePath: /api
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Basic:
    type: basic
security:
- Basic: []
paths:
  /app/home/:
    get:
      operationId: app_home_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Post'
      tags:
      - app
    parameters: []
  /app/welcome/:
    get:
      operationId: app_welcome_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - app
    parameters: []
  /chat/:
    get:
      operationId: chat_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Chat'
      tags:
      - chat
    post:
      operationId: chat_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Chat'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Chat'
      tags:
      - chat
    parameters: []
  /chat/{chat_id}/messages/:
    get:
      operationId: chat_messages_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
      tags:
      - chat
    post:
      operationId: chat_messages_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Message'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Message'
      tags:
      - chat
    parameters:
    - name: chat_id
      in: path
      required: true
      type: string
  /filters/posts/:
    get:
      operationId: filters_posts_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Post'
      tags:
      - filters
    parameters: []
  /posts/:
    get:
      operationId: posts_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Post'
      tags:
      - posts
    post:
      operationId: posts_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Post'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Post'
      tags:
      - posts
    parameters: []
  /posts/random/:
    get:
      operationId: posts_random_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Post'
      tags:
      - posts
    parameters: []
  /posts/user/{username}/:
    get:
      operationId: posts_user_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Post'
      tags:
      - posts
    parameters:
    - name: username
      in: path
      required: true
      type: string
  /posts/{id}/:
    get:
      operationId: posts_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Post'
      tags:
      - posts
    put:
      operationId: posts_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Post'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Post'
      tags:
      - posts
    patch:
      operationId: posts_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Post'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Post'
      tags:
      - posts
    delete:
      operationId: posts_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - posts
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this post.
      required: true
      type: integer
  /search/search/:
    post:
      operationId: search_search_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - search
    parameters: []
  /search/search/history/:
    get:
      operationId: search_search_history_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/SearchHistory'
      tags:
      - search
    parameters: []
  /search/search/history/clear/:
    delete:
      operationId: search_search_history_clear_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - search
    parameters: []
  /users/login/:
    post:
      operationId: users_login_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CustomTokenObtainPair'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CustomTokenObtainPair'
      tags:
      - users
    parameters: []
  /users/login/refresh/:
    post:
      operationId: users_login_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TokenRefresh'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenRefresh'
      tags:
      - users
    parameters: []
  /users/profile/:
    get:
      operationId: users_profile_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfileDetail'
      tags:
      - users
    put:
      operationId: users_profile_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserProfileDetail'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfileDetail'
      tags:
      - users
    patch:
      operationId: users_profile_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserProfileDetail'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfileDetail'
      tags:
      - users
    parameters: []
  /users/profile/{username}/:
    get:
      operationId: users_profile_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfileDetail'
      tags:
      - users
    parameters:
    - name: username
      in: path
      description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
        only.
      required: true
      type: string
      pattern: ^[\w.@+-]+$
  /users/register/artist/:
    post:
      operationId: users_register_artist_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ArtistRegistration'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ArtistRegistration'
      tags:
      - users
    parameters: []
  /users/register/investor/:
    post:
      operationId: users_register_investor_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InvestorRegistration'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/InvestorRegistration'
      tags:
      - users
    parameters: []
definitions:
  Post:
    required:
    - art_section
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      owner:
        title: Owner
        type: integer
        readOnly: true
      owner_username:
        title: Owner username
        type: string
        readOnly: true
        minLength: 1
      owner_full_name:
        title: Owner full name
        type: string
        readOnly: true
        minLength: 1
      owner_type:
        title: Owner type
        type: string
        readOnly: true
      art_section:
        title: Art section
        type: string
        enum:
        - ACTING
        - WRITING
        - OTHER
      owner_profile_picture:
        title: Owner profile picture
        type: string
        readOnly: true
        format: uri
      description:
        title: Description
        type: string
        x-nullable: true
      picture:
        title: Picture
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      video:
        title: Video
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      views_count:
        title: Views count
        type: integer
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
  Chat:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      other_participant:
        title: Other participant
        type: string
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      last_message:
        title: Last message
        type: string
        readOnly: true
  Message:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      chat:
        title: Chat
        type: integer
        readOnly: true
      sender:
        title: Sender
        type: integer
        readOnly: true
      sender_username:
        title: Sender username
        type: string
        readOnly: true
        minLength: 1
      sender_profile_picture:
        title: Sender profile picture
        type: string
        readOnly: true
        format: uri
      message_type:
        title: Message type
        type: string
        enum:
        - TEXT
        - AUDIO
        - FILE
      text_content:
        title: Text content
        type: string
        x-nullable: true
      file_attachment:
        title: File attachment
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      timestamp:
        title: Timestamp
        type: string
        format: date-time
        readOnly: true
  SearchHistory:
    required:
    - query
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      query:
        title: Query
        type: string
        maxLength: 255
        minLength: 1
      searched_at:
        title: Searched at
        type: string
        format: date-time
        readOnly: true
  CustomTokenObtainPair:
    required:
    - username_or_email
    - password
    type: object
    properties:
      username_or_email:
        title: Username or email
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  TokenRefresh:
    required:
    - refresh
    type: object
    properties:
      refresh:
        title: Refresh
        type: string
        minLength: 1
      access:
        title: Access
        type: string
        readOnly: true
        minLength: 1
  ArtistProfile:
    type: object
    properties:
      art_section:
        title: Art section
        type: string
        enum:
        - ACTING
        - WRITING
        - OTHER
        x-nullable: true
      art_cv:
        title: Art cv
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      what_i_need:
        title: What i need
        type: string
        x-nullable: true
  InvestorProfile:
    required:
    - support_type
    type: object
    properties:
      support_type:
        title: Support type
        type: string
        enum:
        - PAYMENT
        - OTHER
      own_art_company:
        title: Own art company
        type: boolean
      company_name:
        title: Company name
        type: string
        maxLength: 255
        x-nullable: true
      company_art_field:
        title: Company art field
        type: string
        maxLength: 255
        x-nullable: true
      art_section:
        title: Art section
        type: string
        enum:
        - ACTING
        - WRITING
        - OTHER
        x-nullable: true
      what_i_need:
        title: What i need
        type: string
        x-nullable: true
      bio:
        title: Bio
        type: string
        x-nullable: true
  UserProfileDetail:
    required:
    - full_name
    - phone_number
    - country
    - date_of_birth
    type: object
    properties:
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        readOnly: true
        minLength: 1
      full_name:
        title: Full name
        type: string
        maxLength: 255
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        readOnly: true
        minLength: 1
      phone_number:
        title: Phone number
        type: string
        maxLength: 20
        minLength: 1
      country:
        title: Country
        type: string
        maxLength: 100
        minLength: 1
      date_of_birth:
        title: Date of birth
        type: string
        format: date
      age:
        title: Age
        type: integer
        readOnly: true
        x-nullable: true
      profile_picture:
        title: Profile picture
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      user_type:
        title: User type
        type: string
        enum:
        - ARTIST
        - INVESTOR
        readOnly: true
      artist_profile:
        $ref: '#/definitions/ArtistProfile'
      investor_profile:
        $ref: '#/definitions/InvestorProfile'
  ArtistRegistration:
    required:
    - username
    - full_name
    - email
    - phone_number
    - country
    - date_of_birth
    - user_type
    - password
    - confirm_password
    - artist_profile
    type: object
    properties:
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      full_name:
        title: Full name
        type: string
        maxLength: 255
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        minLength: 1
      phone_number:
        title: Phone number
        type: string
        maxLength: 20
        minLength: 1
      country:
        title: Country
        type: string
        maxLength: 100
        minLength: 1
      date_of_birth:
        title: Date of birth
        type: string
        format: date
      profile_picture:
        title: Profile picture
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      user_type:
        title: User type
        type: string
        enum:
        - ARTIST
        - INVESTOR
      password:
        title: Password
        type: string
        minLength: 1
      confirm_password:
        title: Confirm password
        type: string
        minLength: 1
      artist_profile:
        $ref: '#/definitions/ArtistProfile'
  InvestorRegistration:
    required:
    - username
    - full_name
    - email
    - phone_number
    - country
    - date_of_birth
    - user_type
    - password
    - confirm_password
    - investor_profile
    type: object
    properties:
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      full_name:
        title: Full name
        type: string
        maxLength: 255
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        minLength: 1
      phone_number:
        title: Phone number
        type: string
        maxLength: 20
        minLength: 1
      country:
        title: Country
        type: string
        maxLength: 100
        minLength: 1
      date_of_birth:
        title: Date of birth
        type: string
        format: date
      profile_picture:
        title: Profile picture
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      user_type:
        title: User type
        type: string
        enum:
        - ARTIST
        - INVESTOR
      password:
        title: Password
        type: string
        minLength: 1
      confirm_password:
        title: Confirm password
        type: string
        minLength: 1
      investor_profile:
        $ref: '#/definitions/InvestorProfile'
